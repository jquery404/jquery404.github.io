<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="favicon.ico" type="image/x-icon" />
    <title>mxrc</title>
    <style>
        video{width: 300px;position: absolute;top: 0;}
        canvas{border: 1px dashed;display: block;}
    </style>

    <script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.slim.js"></script>
    
    <script src="https://unpkg.com/networked-aframe@^0.7.1/dist/networked-aframe.min.js"></script>
    <script src="https://unpkg.com/super-hands/dist/super-hands.min.js"></script>
    <script src="https://unpkg.com/aframe-event-set-component@^4.0.0/dist/aframe-event-set-component.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/c-frame/aframe-physics-system@v4.1.0/dist/aframe-physics-system.js"></script>
    <script src="https://unpkg.com/aframe-physics-extras/dist/aframe-physics-extras.min.js"></script>

    <script>
        AFRAME.registerComponent('faisal-room', {
            schema: { 
                name: {type: 'string', default: 'Hello ðŸ‘‹'} 
            },

            init: function () {
                var namelist = ["Smith","Johnson","Williams","Brown","Jones","Miller","Davis","Garcia","Rodriguez","Wilson","Martinez","Anderson","Taylor","Thomas","Hernandez","Moore","Martin","Jackson","Thompson","White","Lopez","Lee","Gonzalez","Harris","Clark","Lewis","Robinson","Walker","Perez","Hall","Young","Allen","Sanchez"];
                var pickaname = namelist[Math.floor(Math.random()*namelist.length -1)];
                var person = prompt("Please enter your name", pickaname);

                if (person != null) {
                    var el = this.el;
                
                    // Set local user's name
                    var myNametag = document.querySelector('.nametag');
                    myNametag.setAttribute('text', 'value', person);
                    
                    // Setup networked-scene
                    var networkedComp = {
                        room: 'basic',
                        debug: true,
                    };
                    el.setAttribute('networked-scene', networkedComp);
                }
            
            }
        });

        AFRAME.registerComponent('rigid-body', {
            schema: { 
                name: {type: 'string', default: 'Hello ðŸ‘‹'} 
            },

            init: function () {
                var el = this.el;
                el.setAttribute('hoverable', '');
                el.setAttribute('grabbable', '');
                el.setAttribute('stretchable', '');
                el.setAttribute('draggable', '');
                el.setAttribute('dynamic-body ', '');
                el.setAttribute('event-set__hoveron', '_event: hover-start; material.opacity: 0.7; transparent: true');
                el.setAttribute('event-set__hoveroff', '_event: hover-end; material.opacity: 1; transparent: false');
            }
        });

        // Spawn in circle
        AFRAME.registerComponent('spawn-in-circle', {
            schema: {
            radius: {type: 'number', default: 1}
            },
        
            init: function() {
            var el = this.el;
            var center = el.getAttribute('position');
        
            var angleRad = this.getRandomAngleInRadians();
            var circlePoint = this.randomPointOnCircle(this.data.radius, angleRad);
            var worldPoint = {x: circlePoint.x + center.x, y: center.y+.2, z: circlePoint.y + center.z};
            el.setAttribute('position', worldPoint);
        
            // we dont want the avatar to rotate
            //   var angleDeg = angleRad * 180 / Math.PI;
            //   var angleToCenter = -1 * angleDeg + 90;
            //   var angleRad = THREE.Math.degToRad(angleToCenter);
            //   el.object3D.rotation.set(0, angleRad, 0);
            },
        
            getRandomAngleInRadians: function() {
            return Math.random()*Math.PI*2;
            },
        
            randomPointOnCircle: function (radius, angleRad) {
            var x = Math.cos(angleRad)*radius;
            var y = Math.sin(angleRad)*radius;
            return {x: x, y: y};
            }
        });

        // set skybox material
        AFRAME.registerComponent('set-sky', {
            schema: {default:'#sky'},
            init: function() {
                this.sky = this.el;
            },
            update: function() {
                this.sky.setAttribute('src', this.data);
            }
        });
    </script>

</head>
<body>

    <a-scene physics faisal-room>
        <a-assets>
        <img id="grid" src="<%= _url %>/img/grid.png" />
        <img id="sky" src="<%= _url %>/img/sky.jpg" />

        <a-mixin id="blocks" geometry="primitive: box; width: 1; height: 1; depth: .33" material="opacity:0.5"
                 hoverable grabbable stretchable draggable
                 dynamic-body shadow></a-mixin>
        
        <a-mixin id="table" static-body geometry="primitive: box; width: 0.5; height: 0.5; depth: 0.5"></a-mixin>

        <!-- player avatar -->
        <a-asset-item id="my-head-glb" src="<%= _url %>/model/_avatars/av_irina_head.glb"></a-asset-item>
        <a-asset-item id="my-body-glb" src="<%= _url %>/model/_avatars/av_irina_body.glb"></a-asset-item>
        <a-asset-item id="my-hand-l-glb" src="<%= _url %>/model/_avatars/hand.l.glb"></a-asset-item>
        <a-asset-item id="my-hand-r-glb" src="<%= _url %>/model/_avatars/hand.r.a.glb"></a-asset-item>

        <template id="player-template">
            <a-entity></a-entity>
        </template>

        <template id="avatar-template">
            <a-entity class="avatar">
                <a-entity class="nametag" text="value: Hello; align:center;" position="0 0.6 0" rotation="0 180 0" scale="4 4 4"></a-entity>
                <a-entity class="head" gltf-model="#my-head-glb" scale="1 1 1" rotation="0 180 0"></a-entity>
                <a-entity class="body" gltf-model="#my-body-glb" scale="1 1 1" rotation="0 180 0"></a-entity>
            </a-entity>
        </template>

        <template id="hand-l-template">
            <a-entity>
              <a-entity gltf-model="#my-hand-l-glb" scale=".08 .08 .08"></a-entity>
            </a-entity>
        </template>
        
        <template id="hand-r-template">
            <a-entity>
              <a-entity gltf-model="#my-hand-r-glb" scale=".08 .08 .08"></a-entity>
            </a-entity>
        </template>
        <!-- /player avatar -->

        <!-- lego-domino -->
        <a-asset-item id="lego0" src="<%= _url %>/model/lego.glb/lego_0.glb"></a-asset-item>
        <a-asset-item id="lego1" src="<%= _url %>/model/lego.glb/lego_1.glb"></a-asset-item>
        <a-asset-item id="lego2" src="<%= _url %>/model/lego.glb/lego_2.glb"></a-asset-item>
        <a-asset-item id="lego3" src="<%= _url %>/model/lego.glb/lego_3.glb"></a-asset-item>
        <a-asset-item id="lego4" src="<%= _url %>/model/lego.glb/lego_4.glb"></a-asset-item>
        <a-asset-item id="lego5" src="<%= _url %>/model/lego.glb/lego_5.glb"></a-asset-item>
        <a-asset-item id="lego6" src="<%= _url %>/model/lego.glb/lego_6.glb"></a-asset-item>
        <a-asset-item id="lego7" src="<%= _url %>/model/lego.glb/lego_7.glb"></a-asset-item>

        <a-asset-item id="domino0" src="<%= _url %>/model/domino.glb/domino_0.glb"></a-asset-item>
        <a-asset-item id="domino1" src="<%= _url %>/model/domino.glb/domino_1.glb"></a-asset-item>
        <a-asset-item id="domino2" src="<%= _url %>/model/domino.glb/domino_2.glb"></a-asset-item>
        <a-asset-item id="domino3" src="<%= _url %>/model/domino.glb/domino_3.glb"></a-asset-item>
        <a-asset-item id="domino4" src="<%= _url %>/model/domino.glb/domino_4.glb"></a-asset-item>
        <a-asset-item id="domino5" src="<%= _url %>/model/domino.glb/domino_5.glb"></a-asset-item>
        <!-- /lego-domino -->

        <a-mixin id="touch"
                 physics-collider phase-shift
                 collision-filter="collisionForces: false"
                 static-body="shape: sphere; sphereRadius: 0.02"
                 super-hands="colliderEvent: collisions;
                              colliderEventProperty: els;
                              colliderEndEvent: collisions;
                              colliderEndEventProperty: clearedEls;">
        </a-assets>

        <a-entity id="rhand" mixin="touch" hand-controls="hand: right"></a-entity>
        <a-entity id="lhand" mixin="touch" hand-controls="hand: left"></a-entity>

        <a-entity id="player" spawn-in-circle="radius:3" networked="template:#player-template;attachTemplateToLocal:false;">
            <a-entity id="playerHead"
                networked="template:#avatar-template;attachTemplateToLocal:false;"
                position="0 1.8 0" 
                look-controls>
                <a-entity class="nametag" visible="false"></a-entity>
            </a-entity>
            <!-- <a-entity id="lhand" 
                laser-controls="hand: left"
                mixin="hud-interactable"
                raycaster="objects: [gui-interactable], .hud; lineColor: #7B98F7; far: 1000"                
                networked="template:#hand-l-template;attachTemplateToLocal:true;">
            </a-entity>

            <a-entity id="rhand" 
                laser-controls="hand: right" 
                mixin="hud-interactable"
                raycaster="objects: [gui-interactable], .clickable, .hud; lineColor: #7B98F7; far: 1000" 
                networked="template:#hand-r-template;attachTemplateToLocal:true;">                
            </a-entity> -->
        </a-entity>

        <a-entity light="color: #ffffff; intensity: 1; type: ambient;"></a-entity>
        <a-entity light="color: #ffffff; intensity: 1.5" position="5 5 5"></a-entity>


        <a-entity gltf-model="#lego0" scale=".1 .1 .1" position="-1.0542 0 -1.43503"></a-entity>
        <a-entity gltf-model="#lego1" scale=".1 .1 .1" position="-1.63538 0 -1.27362"></a-entity>
        <a-entity gltf-model="#lego2" scale=".1 .1 .1" position="-1.23302 0 -1.73532"></a-entity>
        <a-entity gltf-model="#lego3" scale=".1 .1 .1" position="-1.4 0 -1.43408"></a-entity>
        <a-entity gltf-model="#lego4" scale=".1 .1 .1" position="-1.16896 0 -1.05897"></a-entity>
        <a-entity gltf-model="#lego5" scale=".1 .1 .1" position="-1.53742 0 -1.91663"></a-entity>
        <a-entity gltf-model="#lego6" scale=".1 .1 .1" position="-1.41484 0 -1.01536"></a-entity>
        <a-entity gltf-model="#lego7" scale=".1 .1 .1" position="-1.21771 0 -2"></a-entity>


        <a-entity class="dom0" mixin="blocks" position="0.35174 0.84128 -0.34864">
            <a-entity gltf-model="#domino0" position="0 0 0"></a-entity>
        </a-entity>
        <a-entity class="dom0" mixin="blocks" position="0.50338 0.68086 -1.2909">
            <a-entity gltf-model="#domino1" position="0 0 0"></a-entity>
        </a-entity>
        <a-entity class="dom0" mixin="blocks" position="0.49208 0.79446 -0.99465">
            <a-entity gltf-model="#domino2" position="0 0 0"></a-entity>
        </a-entity>
        <a-entity class="dom0" mixin="blocks" position="0.50121 0.61227 -1.61173">
            <a-entity gltf-model="#domino3" position="0 0 0"></a-entity>
        </a-entity>
        <a-entity class="dom0" mixin="blocks" position="0.47586 0.90757 -0.61842">
            <a-entity gltf-model="#domino4" position="0 0 0"></a-entity>
        </a-entity>
        <a-entity class="dom0" mixin="blocks" position="0.11972 0.58744 -1.26953">
            <a-entity gltf-model="#domino5" position="0 0 0"></a-entity>
        </a-entity>

        <a-entity class="table" mixin="table" scale="4 1 4" position = "0 .25 -1" material="color: brown" shadow></a-entity>

        <a-entity position="0 0 0"
        geometry="primitive: plane; width: 10000; height: 10000;" rotation="-90 0 0"
        material="src: #grid; repeat: 10000 10000; transparent: true; metalness:0.6; roughness: 0.4; sphericalEnvMap: #sky;"></a-entity>
        <a-sky set-sky="#sky" rotation="0 0 0"></a-sky>
        <a-box static-body width="100" height="0.01" depth="100" visible="false"></a-box>
    </a-scene>


    <video id="host" playsinline autoplay muted></video>
    
    <script src="<%= _url %>/scripts/rtcconfig.js"></script>
    <script src="<%= _url %>/scripts/jquery-latest.min.js"></script>


    <script>
        //let skybox = document.querySelector("a-sky");
        //skybox.setAttribute('set-sky', `#host`);

        // syncing avatar
        NAF.schemas.add({template: '#player-template', components: ['position', 'rotation']});
        NAF.schemas.add({template: '#avatar-template', components: ['position', 'rotation', {
            selector: '.nametag',
            component: 'text',
            property: 'value'
        }]});
        NAF.schemas.add({template: '#hand-l-template', components: ['position', 'rotation']});
        NAF.schemas.add({template: '#hand-r-template', components: ['position', 'rotation']});
        
    </script>
</body>
</html>