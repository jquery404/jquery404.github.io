ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = 1), width = .75) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .75) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .5) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .85) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
library(lubridate)
library(lubridate)
# Generate sample data
set.seed(42)
sample_size <- 1000
timestamps <- seq(from = as.POSIXct("2023-01-01 00:00:00"), by = "10 min", length.out = sample_size)
latencies <- runif(sample_size, min = 10, max = 500)
data <- data.frame(timestamp = timestamps, latency = latencies)
# Convert the timestamp column to a proper date-time format
data$timestamp <- as.POSIXct(data$timestamp, format="%Y-%m-%d %H:%M:%S")
# Calculate the average, minimum, and maximum latency per time period (e.g., per hour)
latency_summary_data <- data %>%
group_by(time_period = floor_date(timestamp, "hour")) %>%
summarise(avg_latency = mean(latency, na.rm = TRUE),
min_latency = min(latency, na.rm = TRUE),
max_latency = max(latency, na.rm = TRUE))
# Create the combined latency chart using ggplot2
ggplot() +
geom_linerange(data = latency_summary_data, aes(x = time_period, ymin = min_latency, ymax = max_latency), color = "gray", alpha = 0.5) +
geom_line(data = latency_summary_data, aes(x = time_period, y = avg_latency), color = "blue") +
geom_point(data = latency_summary_data, aes(x = time_period, y = avg_latency), color = "blue") +
labs(title = "End-to-End Latency",
x = "Time Period",
y = "Latency (ms)") +
theme_minimal()
# Set up the data
metrics <- c('System Setup Time', 'Capturing/Processing Time', 'Encoding/Decoding Time', 'Transmission Time', 'Rendering FPS')
values <- list(c(45, 3, 50, 100, 60), c(60, 5, 60, 120, 50), c(55, 2, 40, 80, 70))
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Set up custom sorting order
custom_order <- c('System Setup Time',
'Capturing/Processing Time',
'Encoding/Decoding Time',
'Transmission Time',
'Rendering FPS')
# Create a data frame
data <- data.frame(metric = factor(rep(metrics, 3), levels = custom_order),
value = unlist(values),
test = rep(c("C1", "C2", "C3"), each = length(metrics)))
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Set up the data
metrics <- c('Capturing/Processing Time', 'Encoding/Decoding Time', 'Transmission Time', 'Network Latency', 'Rendering FPS')
values <- list(c(45, 3, 50, 100, 60), c(60, 5, 60, 120, 50), c(55, 2, 40, 80, 70))
# Set up custom sorting order
custom_order <- c('Capturing/Processing Time',
'Encoding/Decoding Time',
'Transmission Time',
'Network Latency',
'Rendering FPS')
# Create a data frame
data <- data.frame(metric = factor(rep(metrics, 3), levels = custom_order),
value = unlist(values),
test = rep(c("C1", "C2", "C3"), each = length(metrics)))
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
values <- list(c(45, 3, 50, 100, 80), c(60, 5, 60, 120, 65), c(55, 2, 40, 80, 59))
# Set up custom sorting order
custom_order <- c('Capturing/Processing Time',
'Encoding/Decoding Time',
'Transmission Time',
'Network Latency',
'Rendering FPS')
# Create a data frame
data <- data.frame(metric = factor(rep(metrics, 3), levels = custom_order),
value = unlist(values),
test = rep(c("C1", "C2", "C3"), each = length(metrics)))
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
100
values <- list(c(45, 3, 50, 53, 80), c(60, 5, 60, 80, 65), c(55, 2, 40, 120, 59))
# Set up custom sorting order
custom_order <- c('Capturing/Processing Time',
'Encoding/Decoding Time',
'Transmission Time',
'Network Latency',
'Rendering FPS')
# Create a data frame
data <- data.frame(metric = factor(rep(metrics, 3), levels = custom_order),
value = unlist(values),
test = rep(c("C1", "C2", "C3"), each = length(metrics)))
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
values <- list(c(45, 5, 50, 53, 80), c(60, 55, 60, 80, 65), c(55, 72, 71, 120, 59))
# Set up custom sorting order
custom_order <- c('Capturing/Processing Time',
'Encoding/Decoding Time',
'Transmission Time',
'Network Latency',
'Rendering FPS')
# Create a data frame
data <- data.frame(metric = factor(rep(metrics, 3), levels = custom_order),
value = unlist(values),
test = rep(c("C1", "C2", "C3"), each = length(metrics)))
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
values <- list(c(45, 5, 50, 53, 80), c(60, 55, 60, 80, 65), c(55, 22, 71, 120, 59))
values <- list(c(45, 5, 50, 53, 80), c(60, 15, 60, 80, 65), c(55, 22, 71, 120, 59))
# Set up custom sorting order
custom_order <- c('Capturing/Processing Time',
'Encoding/Decoding Time',
'Transmission Time',
'Network Latency',
'Rendering FPS')
# Create a data frame
data <- data.frame(metric = factor(rep(metrics, 3), levels = custom_order),
value = unlist(values),
test = rep(c("C1", "C2", "C3"), each = length(metrics)))
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
values <- list(c(45, 5, 50, 53, 80), c(60, 15, 60, 80, 65), c(75, 22, 71, 120, 59))
# Set up custom sorting order
custom_order <- c('Capturing/Processing Time',
'Encoding/Decoding Time',
'Transmission Time',
'Network Latency',
'Rendering FPS')
# Create a data frame
data <- data.frame(metric = factor(rep(metrics, 3), levels = custom_order),
value = unlist(values),
test = rep(c("C1", "C2", "C3"), each = length(metrics)))
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .75), width = .65) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Save the chart as a PDF file
ggsave("out/performance.pdf", bbox_inches = "tight", width = 10, height = 7, unit = "in", dpi = 300)
# Save the chart as a PDF file
ggsave("out/performance.pdf", width = 10, height = 7, unit = "in", dpi = 300)
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expand_scale(add = c(0, 0.1))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expand_scale(add = c(0, 0))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(0, 0))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(0, 0.1))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(0, 0.5))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(0.5, 0.5))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(1, 1))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(0, 1))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(-1, 1))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(2, 1))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(5, 1))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
0.5
0.5
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(0.5, 0.5))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = expansion(add = c(1, 1))) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = c(0, 0)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = c(1, 0)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = c(.5, 0)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = c(.5, .5)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = c(0, .5)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .5), width = .45) +
scale_y_discrete(expand = c(0, .8)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .6), width = .45) +
scale_y_discrete(expand = c(0, .8)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .8), width = .45) +
scale_y_discrete(expand = c(0, .8)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .6), width = .45) +
scale_y_discrete(expand = c(0, .8)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .65), width = .45) +
scale_y_discrete(expand = c(0, .8)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .65), width = .45) +
scale_y_discrete(expand = c(0, .9)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .65), width = .45) +
scale_y_discrete(expand = c(0, 1)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .65), width = .45) +
scale_y_discrete(expand = c(0, 2)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
1
# Create the chart
ggplot(data, aes(x = value, y = metric, fill = test)) +
geom_col(position = position_dodge(width = .65), width = .45) +
scale_y_discrete(expand = c(0, 1)) +
scale_fill_manual(values = c("#3c3c3c", "#666666", "#B5B5B5")) +
labs(title = "System Performance Chart", x = "Time in ms or FPS", y = "System Performance Metrics") +
theme_minimal() +
theme(axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Save the chart as a PDF file
ggsave("out/performance.pdf", width = 10, height = 7, unit = "in", dpi = 300)
