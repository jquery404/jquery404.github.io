geom_bar(stat = "identity") +
facet_wrap(~ Variable, nrow = 1) +
scale_fill_manual(values = my_col) +
scale_y_continuous(limits = c(0, 105), breaks = 0:5*20, expand = expand_scale(mult = c(0, 0.05))) +
labs(title = "Stacked bar plot", y = "%") +
guides(fill = guide_legend(title = "Rank"))
p
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = 0.03, y_position = 105 ,xmin="IM", xmax="REF")
p
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = '*', y_position = 105 ,xmin="IM", xmax="REF")
p
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = '*', y_position = 102 ,xmin="IM", xmax="REF")
p
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = '*', y_position = 101, xmin="IM", xmax="REF")
p
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = '*', y_position = 105 ,xmin="IM", xmax="REF")
p
p <- ggplot_build(p)
p$data[[2]] <- rbind(p$data[[2]],p$data[[2]]) # rbind a second annotation a three rows
p$data[[2]]$PANEL[4:6] <- 2 # panel 2
p$data[[2]]$annotation[4:6] <- "your text"
plot(ggplot_gtable(p))
plot(ggplot_gtable(p))
p
p <- ggplot_build(p)
p$data[[2]] <- rbind(p$data[[2]],p$data[[2]]) # rbind a second annotation a three rows
p$data[[2]]$PANEL[4:6] <- 2 # panel 2
p$data[[2]]$annotation[4:6] <- "your text"
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = '*', y_position = 105 ,xmin="IM", xmax="REF")
p <- ggplot_build(p)
p$data[[2]] <- rbind(p$data[[2]],p$data[[2]]) # rbind a second annotation a three rows
p$data[[2]]$PANEL[4:6] <- 2 # panel 2
p$data[[2]]$annotation[4:6] <- "your text"
plot(ggplot_gtable(p))
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = '*', y_position = 105 ,xmin="IM", xmax="REF")
p
library(tidyverse)
library(cowplot)
library(ggsignif)
# Make a dataframe for plotting stacked bar plot
df <- data.frame(Diet = rep(c("REF", "IM"), each = 8),
Variable = c("hpv", "hpv", "hpv", "hpv", "smc", "smc", "lpc", "lpc",
"hpv", "hpv", "hpv", "smc", "smc", "smc", "lpc", "lpc"),
Rank = c("Mild", "Moderate", "Marked", "Severe", "Normal", "Mild", "Normal", "Mild",
"Mild", "Moderate", "Marked", "Normal", "Mild", "Moderate", "Normal", "Mild"),
Percent = c(5.56, 38.9, 44.4, 11.1, 38.9, 61.1, 77.8, 22.2,
16.7, 66.7, 16.7, 11.1, 72.2, 16.7, 50, 50)
)
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = '*', y_position = 105 ,xmin="IM", xmax="REF")
p
library(tidyverse)
library(cowplot)
library(ggsignif)
# Make a dataframe for plotting stacked bar plot
df <- data.frame(Diet = rep(c("REF", "IM"), each = 8),
Variable = c("hpv", "hpv", "hpv", "hpv", "smc", "smc", "lpc", "lpc",
"hpv", "hpv", "hpv", "smc", "smc", "smc", "lpc", "lpc"),
Rank = c("Mild", "Moderate", "Marked", "Severe", "Normal", "Mild", "Normal", "Mild",
"Mild", "Moderate", "Marked", "Normal", "Mild", "Moderate", "Normal", "Mild"),
Percent = c(5.56, 38.9, 44.4, 11.1, 38.9, 61.1, 77.8, 22.2,
16.7, 66.7, 16.7, 11.1, 72.2, 16.7, 50, 50)
)
# Specify the desired orders of factors and convert "Rank" to an ordered factor
df$Diet <- factor(df$Diet, levels = c("REF", "IM"))
df$Variable <- factor(df$Variable, levels = c("hpv", "smc", "lpc"))
df$Rank <- ordered(df$Rank, levels = c("Normal", "Mild", "Moderate", "Marked", "Severe")) # Rank as ordered factor
# Define color scheme
my_col = c(Normal = "royalblue2", Mild = "peachpuff1", Moderate = "tan1", Marked = "tomato", Severe = "red3")
p <- ggplot(df, aes(Diet, Percent, fill = Rank)) +
geom_col() +
facet_wrap(~ Variable) +
geom_signif(annotations = '*', y_position = 105 ,xmin="IM", xmax="REF")
p
library(reshape2)
# Create the new data frame
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
# Add a sorting variable to the data frame
data1 <- data %>%
mutate(Sorting = interaction(qus, conditions, sep = ""))
data_melted <- melt(data1, id.vars = c("qus", "conditions", "Sorting"), variable.name = "rank", value.name = "value")
# Create the bar plot
plot <- ggplot(data_melted, aes(x = factor(Sorting, labels = c("q1C1", "q1C2", "q1C3", "q2C1", "q2C2", "q2C3", "q3C1", "q3C2", "q3C3", "q4C1", "q4C2", "q4C3", "q5C1", "q5C2", "q5C3")), y = value, fill = rank)) +
geom_col() +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
stat.test <- data_melted %>%
group_by(rank) %>%
wilcox_test(value~conditions, p.adjust.method = 'BH') %>%
add_significance("p") %>%
add_xy_position(x = "rank")
plot +
stat_pvalue_manual(stat.test, label = 'p.signif', hide.ns = TRUE, tip.length = 0.02)
# Create the bar plot
plot <- ggplot(data_melted, aes(x = factor(Sorting, labels = c("q1C1", "q1C2", "q1C3", "q2C1", "q2C2", "q2C3", "q3C1", "q3C2", "q3C3", "q4C1", "q4C2", "q4C3", "q5C1", "q5C2", "q5C3")), y = value, fill = rank)) +
geom_col() +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
plot <- ggplot(data_melted, aes(x = factor(Sorting, labels = c("q1C1", "q1C2", "q1C3", "q2C1", "q2C2", "q2C3", "q3C1", "q3C2", "q3C3", "q4C1", "q4C2", "q4C3", "q5C1", "q5C2", "q5C3")), y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
plot <- ggplot(data_melted, aes(x = factor(Sorting, labels = c("q1C1", "q1C2", "q1C3", "q2C1", "q2C2", "q2C3", "q3C1", "q3C2", "q3C3", "q4C1", "q4C2", "q4C3", "q5C1", "q5C2", "q5C3")), y = value, fill = rank)) +
geom_col() +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
plot <- ggplot(data_melted, aes(x = factor(Sorting, labels = c("q1C1", "q1C2", "q1C3", "q2C1", "q2C2", "q2C3", "q3C1", "q3C2", "q3C3", "q4C1", "q4C2", "q4C3", "q5C1", "q5C2", "q5C3")), y = value, fill = rank)) +
geom_col() +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
#coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
plot <- ggplot(data_melted, aes(x = factor(Sorting, labels = c("q1C1", "q1C2", "q1C3", "q2C1", "q2C2", "q2C3", "q3C1", "q3C2", "q3C3", "q4C1", "q4C2", "q4C3", "q5C1", "q5C2", "q5C3")), y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
#coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
# Create the new data frame
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
# Create the bar plot
plot <- ggplot(data, aes(x = qus, y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
#coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
data1 <- data %>%
mutate(Sorting = interaction(qus, conditions, sep = ""))
View(data1)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
data1 <- data %>%
mutate(Sorting = interaction(qus, conditions, sep = ""))
data_melted <- melt(data1, id.vars = c("qus", "conditions", "Sorting"), variable.name = "rank", value.name = "value")
View(data_melted)
# Create the bar plot
plot <- ggplot(data, aes(x = qus, y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
#coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
data1 <- data %>%
mutate(Sorting = interaction(factor(qus), conditions, sep = ""))
data_melted <- melt(data1, id.vars = c("qus", "conditions", "Sorting"), variable.name = "rank", value.name = "value")
# Create the bar plot
plot <- ggplot(data, aes(x = qus, y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
#coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
data1 <- data %>%
mutate(Sorting = interaction(factor(qus), conditions, sep = ""))
data_melted <- melt(data1, id.vars = c("qus", "conditions", "Sorting"), variable.name = "rank", value.name = "value")
# Create the bar plot
plot <- ggplot(data_melted, aes(x = Sorting, y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
#coord_flip() +  # Flip the plot
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
data1 <- data %>%
mutate(Sorting = interaction(factor(qus), conditions, sep = ""))
View(data1)
data_melted <- melt(data1, id.vars = c("qus", "conditions", "Sorting"), variable.name = "rank", value.name = "value")
# Create the bar plot
plot <- ggplot(data_melted, aes(x = factor(qus), y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
plot <- ggplot(data_melted, aes(x = factor(qus), y = value, fill = rank)) +
geom_col()
print(plot)
plot <- ggplot(data_melted, aes(x = factor(qus), y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white")
print(plot)
plot <- ggplot(data_melted, aes(x = Sorting, y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
plot <- ggplot(data_melted, aes(x = Sorting, y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus)
print(plot)
View(data_melted)
plot <- ggplot(data_melted, aes(x = factor(qus), y = value, fill = rank)) +
geom_col()
print(plot)
plot <- ggplot(data_melted, aes(x = factor(conditions), y = value, fill = rank)) +
geom_col()
# Display the plot
print(plot)
plot <- ggplot(data_melted, aes(x = factor(conditions), y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus)
print(plot)
plot <- ggplot(data_melted, aes(x = factor(conditions), y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
coord_flip()
# Display the plot
print(plot)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
data1 <- data %>%
mutate(Sorting = interaction(factor(qus), conditions, sep = ""))
data_melted <- melt(data1, id.vars = c("qus", "conditions", "Sorting"), variable.name = "rank", value.name = "value")
# Create the bar plot
plot <- ggplot(data_melted, aes(x = factor(conditions), y = value, fill = rank)) +
geom_col() +
facet_wrap(~ qus) +
# coord_flip() +
geom_text(aes(label = value), position = position_stack(vjust = 0.5), colour = "white") +  # Center the text
scale_fill_manual(values = c("rank1" = "#595959", "rank2" = "#C1C1C1", "rank3" = "#343434")) +  # Custom colors
labs(x = "Qus and Conditions",
y = "Value") +
theme_minimal()
# Display the plot
print(plot)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
data_reshaped <- data %>%
tidyr::gather(key = "Rank", value = "Value", -qus, -conditions) %>%
dplyr::mutate(Rank = factor(Rank, levels = c("rank1", "rank2", "rank3")))
friedman_test <- friedmanTest(Value ~ Rank | qus, data = data_reshaped)
print(friedman_test)
library(coin)
library(rcompanion)
library(dplyr)
install.packages("coin")
install.packages("rcompanion")
friedman_test <- friedmanTest(Value ~ Rank | qus, data = data_reshaped)
print(friedman_test)
library(coin)
library(rcompanion)
friedman_test <- friedmanTest(Value ~ Rank | qus, data = data_reshaped)
print(friedman_test)
View(data_reshaped)
library(Kendall)
friedman_test <- friedman.test(Value ~ Rank | qus, data = data_reshaped)
print(friedman_test)
# Load the dataset
data(mtcars)
# Perform the Friedman test
friedman.test(mtcars[, c("mpg", "disp", "hp")])
friedman.test(Value ~ Rank | qus, data = data_reshaped)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
data_reshaped <- data %>%
tidyr::gather(key = "Rank", value = "Value", -qus, -conditions) %>%
dplyr::mutate(Rank = factor(Rank, levels = c("rank1", "rank2", "rank3")))
friedman.test(Value ~ Rank | qus, data = data_reshaped)
library(tidyverse)
data2 <- data %>%
group_by(qus) %>%
complete(conditions) %>%
replace_na(list(rank1 = 0, rank2 = 0, rank3 = 0)) %>%
ungroup()
friedman.test(cbind(rank1, rank2, rank3) ~ conditions | qus, data = data2)
View(data2)
data2 %>%
group_by(qus) %>%
summarise(w = kendall_w(cbind(rank1, rank2, rank3)))
library(Kendall)
data2 %>%
group_by(qus) %>%
summarise(w = kendall_w(cbind(rank1, rank2, rank3)))
kendall_w(data2[,3:5])
library(Kendall)
data2 <- data %>%
group_by(qus) %>%
complete(conditions) %>%
replace_na(list(rank1 = 0, rank2 = 0, rank3 = 0)) %>%
ungroup()
Kendall(data2[,3:5])
library(Kendall)
data2 <- data %>%
group_by(qus) %>%
complete(conditions) %>%
replace_na(list(rank1 = 0, rank2 = 0, rank3 = 0)) %>%
ungroup()
Kendall(as.matrix(data2[,3:5]), 3)
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
friedman.test(cbind(rank1, rank2, rank3) ~ conditions | qus, data = data)
# Define the data frame
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
# Run Friedman test
friedman.test(data[,3:5])
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
friedman.test(cbind(rank1, rank2, rank3) ~ conditions | qus, data = data)
library(tidyr)
library(dplyr)
library(rstatix)
# Create the data frame
data <- data.frame(
qus = c("q1", "q1", "q1", "q2", "q2", "q2", "q3", "q3", "q3", "q4", "q4", "q4", "q5", "q5", "q5"),
conditions = c("C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3", "C1", "C2", "C3"),
rank1 = c(4, 6, 23, 10, 8, 23, 2, 13, 28, 10, 10, 24, 1, 10, 29),
rank2 = c(10, 23, 10, 17, 20, 8, 9, 21, 6, 8, 25, 7, 16, 22, 5),
rank3 = c(22, 7, 3, 9, 8, 5, 25, 2, 2, 18, 1, 5, 19, 4, 2)
)
# Perform Friedman test
friedman_test(data[, c(3:5)])
data("ToothGrowth")
df <- ToothGrowth %>%
filter(supp == "VC") %>%
mutate(id = rep(1:10, 3))
head(df)
#>    len supp dose id
#> 1  4.2   VC  0.5  1
#> 2 11.5   VC  0.5  2
#> 3  7.3   VC  0.5  3
#> 4  5.8   VC  0.5  4
#> 5  6.4   VC  0.5  5
#> 6 10.0   VC  0.5  6
# Friedman rank sum test
#:::::::::::::::::::::::::::::::::::::::::
df %>% friedman_test(len ~ dose | id)
library(rstatix)
data("ToothGrowth")
df <- ToothGrowth %>%
filter(supp == "VC") %>%
mutate(id = rep(1:10, 3))
head(df)
#>    len supp dose id
#> 1  4.2   VC  0.5  1
#> 2 11.5   VC  0.5  2
#> 3  7.3   VC  0.5  3
#> 4  5.8   VC  0.5  4
#> 5  6.4   VC  0.5  5
#> 6 10.0   VC  0.5  6
# Friedman rank sum test
#:::::::::::::::::::::::::::::::::::::::::
df %>% friedman_test(len ~ dose | id)
help(friedman_test)
data("ToothGrowth")
df <- ToothGrowth %>%
filter(supp == "VC") %>%
mutate(id = rep(1:10, 3))
head(df)
df %>% friedman_test(len ~ dose | id)
