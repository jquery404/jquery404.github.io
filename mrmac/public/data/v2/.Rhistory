my_comparisons <- list( c("0.5", "1"), c("1", "2"), c("0.5", "2") )
p
+ stat_compare_means(comparisons = my_comparisons)
+ stat_compare_means(label.y = 50)
# Load data
data("ToothGrowth")
df <- ToothGrowth
head(df, 4)
p <- ggboxplot(df, x = "dose", y = "len",
fill = "dose", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
shape = "dose")
p
my_comparisons <- list( c("0.5", "1"), c("1", "2"), c("0.5", "2") )
p
+ stat_compare_means(comparisons = my_comparisons)
+ stat_compare_means(label.y = 50)
# Load data
data("ToothGrowth")
df <- ToothGrowth
head(df, 4)
p <- ggboxplot(df, x = "dose", y = "len",
fill = "white",
color = "dose", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
shape = "dose")
p
my_comparisons <- list( c("0.5", "1"), c("1", "2"), c("0.5", "2") )
p
+ stat_compare_means(comparisons = my_comparisons)
+ stat_compare_means(label.y = 50)
# Load data
data("ToothGrowth")
df <- ToothGrowth
head(df, 4)
p <- ggboxplot(df, x = "dose", y = "len",
color = "dose", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
shape = "dose")
p
my_comparisons <- list( c("0.5", "1"), c("1", "2"), c("0.5", "2") )
p
+ stat_compare_means(comparisons = my_comparisons)
+ stat_compare_means(label.y = 50)
# Load data
data("ToothGrowth")
df <- ToothGrowth
head(df, 4)
p <- ggboxplot(df, x = "dose", y = "len",
color = "dose", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
shape = "dose")
p
my_comparisons <- list( c("0.5", "1"), c("1", "2"), c("0.5", "2") )
p + stat_compare_means(comparisons = my_comparisons)+
stat_compare_means(label.y = 50)
# Load data
data("ToothGrowth")
df <- ToothGrowth
head(df, 4)
p <- ggboxplot(df, x = "dose", y = "len",
fill = "dose", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
shape = "dose")
p
my_comparisons <- list( c("0.5", "1"), c("1", "2"), c("0.5", "2") )
p + stat_compare_means(comparisons = my_comparisons)+
stat_compare_means(label.y = 50)
ex_1[2:5] = lapply(ex_1[2:5], factor, levels = 1:5)
ex_1[2:5] = lapply(ex_1[2:5], factor, levels = 1:5)
c <- list(A = c(56, 12, 57, 24), B = c(89, 12, 64, 18, 65, 76))
View(c)
ex_1[2:5] = lapply(c, factor, levels = 1:5)
ex = lapply(c, factor, levels = 1:5)
View(ex)
View(c)
View(ex)
ex_likert = likert(ex)
library(likert)
c <- list(A = c(56, 12, 57, 24), B = c(89, 12, 64, 18, 65, 76))
ex = lapply(c, factor, levels = 1:5)
ex_likert = likert(ex)
install.packages("likert")
ex_likert = likert(ex)
library(likert)
c <- list(A = c(56, 12, 57, 24), B = c(89, 12, 64, 18, 65, 76))
ex = lapply(c, factor, levels = 1:5)
ex_likert = likert(ex)
install.packages("likert")
ex_likert = likert(ex)
library(likert)
install.packages("stringi", repos="http://cran.rstudio.com/", dependencies=TRUE)
View(ToothGrowth)
View(ToothGrowth)
# library
library(ggplot2)
library(dplyr)
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
attach(gfg)
# grouped box plot
ggplot(data=gfg, mapping= aes(x=params, y=score, fill=vrar)) +
geom_bar(position="dodge",stat="identity") +
geom_errorbar(aes(x=params, ymin=score-sd, ymax=score+sd), width=0.4, colour="orange", alpha=0.9, size=1.3)
coord_flip(ylim = c(0, 100))
ggplot(data=gfg, mapping= aes(x=params, y=score, fill=vrar)) +
geom_bar(position="dodge",stat="identity") +
coord_flip(ylim = c(0, 100))
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
attach(gfg)
# grouped box plot
ggplot(data=gfg, mapping= aes(x=params, y=score, fill=vrar)) +
geom_bar(position="dodge",stat="identity") +
coord_flip(ylim = c(0, 100))
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
attach(gfg)
# grouped box plot
ggplot(data=gfg, mapping= aes(x=params, y=score, fill=vrar)) +
geom_bar(position="dodge",stat="identity") +
coord_flip(ylim = c(0, 100))
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
attach(gfg)
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
# library
library(ggplot2)
library(dplyr)
# create a data frame
gfg=read.csv('csv/social-presence.csv', sep=",")
attach(gfg)
# analysis of variance
anova = aov(score ~params, data=gfg)
summary(anova)
# pairwise comp
tukey = TukeyHSD(anova)
print(tukey)
# grouped box plot
ggplot(data = gfg, mapping = aes(x = params, y = score, fill = vrar)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot() +
coord_cartesian(ylim = c(0, 8)) +
#scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
theme_classic() +
theme(legend.text=element_text(size=10),
legend.title=element_text(size=10, hjust=0.5),
legend.key.height = unit(1,"cm"),
legend.key.width = unit(1,"cm"),
legend.position = c(0.9, 0.2)) +
guides(fill=guide_legend(title=""))
# library
library(ggplot2)
library(dplyr)
# create a data frame
gfg=read.csv('csv/social-presence.csv', sep=",")
attach(gfg)
# analysis of variance
anova = aov(score ~params, data=gfg)
summary(anova)
# pairwise comp
tukey = TukeyHSD(anova)
print(tukey)
# grouped box plot
ggplot(data = gfg, mapping = aes(x = params, y = score, fill = vrar)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot() +
coord_cartesian(ylim = c(0, 8)) +
#scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
theme_classic() +
theme(legend.text=element_text(size=10),
legend.title=element_text(size=10, hjust=0.5),
legend.key.height = unit(1,"cm"),
legend.key.width = unit(1,"cm"),
legend.position = c(0.9, 0.2)) +
guides(fill=guide_legend(title=""))
# library
library(ggplot2)
library(dplyr)
# create a data frame
gfg=read.csv('csv/social-presence.csv', sep=",")
attach(gfg)
# analysis of variance
anova = aov(score ~params, data=gfg)
summary(anova)
# pairwise comp
tukey = TukeyHSD(anova)
print(tukey)
# grouped box plot
ggplot(data = gfg, mapping = aes(x = params, y = score, fill = vrar)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot() +
coord_cartesian(ylim = c(0, 8)) +
#scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
theme_classic() +
theme(legend.text=element_text(size=10),
legend.title=element_text(size=10, hjust=0.5),
legend.key.height = unit(1,"cm"),
legend.key.width = unit(1,"cm"),
legend.position = c(0.9, 0.2)) +
guides(fill=guide_legend(title=""))
# library
library(ggplot2)
library(dplyr)
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
attach(gfg)
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
# library
library(ggplot2)
library(ggpubr)
library(dplyr)
library(likert)
coloring = c("#E76469", "#F8D85E","#EDA645","#D1B0B3","#8C99A6","#ADD299","#4FA490","#3B7F9F")
fontsize = 14
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
attach(gfg)
# grouped box plot
ggplot(data = gfg, mapping = aes(x = params, y = score, fill = vrar)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot() +
coord_cartesian(ylim = c(0, 100)) +
#scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
theme(legend.text=element_text(size=10),
legend.title=element_text(size=10, hjust=0.5),
legend.key.height = unit(1,"cm"),
legend.key.width = unit(1,"cm"),
legend.position = c(0.9, 0.9)) +
guides(fill=guide_legend(title=""))
# saving the final figure
ggsave("rtlx.png", width = 6, height = 6, dpi = 1000)
gfg=read.csv('csv/nasa-tlx.csv', sep=",")
usability_data=read.csv('csv/usability.csv', sep=",")
pref_color = c("#90d7de", "#ffbd66","#ffebd0")
attach(usability_data)
cleandata <- usability_data %>%
group_by(params, mode) %>%
summarise(mean_score = mean(score),
counts = n(),
sd_score = sd(score),
se_score = (sd_score/sqrt(sd_score))
)
# grouped box plot
level_order <- c('remote user',	'local user')
ggplot(data=cleandata, mapping= aes(x=factor(params, level = level_order), y=mean_score, fill=mode)) +
geom_col(width=.5, position=position_dodge(.6)) +
geom_errorbar(aes(ymin=mean_score-se_score, ymax=mean_score+se_score), width=.2, position=position_dodge(.6))+
scale_fill_manual(values = pref_color) +
scale_y_continuous(expand = c(0, 0)) +
coord_flip(ylim = c(0, 100)) +
guides(fill=guide_legend(title="")) +
theme_bw() +
theme(axis.line = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(color="black", size=fontsize),
axis.text.y = element_text(color="black", size=fontsize),
text = element_text(size=fontsize),
strip.background = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0.005, .025, 0, 0), "null"),
panel.spacing = unit(c(0, 0, 0, 0), "null"),
panel.grid.major = element_blank(),
panel.border = element_blank(),
legend.position = c(.95, 0.3),
legend.justification = c("right", "top"),
legend.title=element_blank(),
legend.text=element_text(size=fontsize),
legend.box.just = "right",
legend.box.background = element_rect(fill = "white", color = "black", size = 1))
# library
library(ggplot2)
library(ggpubr)
library(dplyr)
library(likert)
coloring = c("#ffbd66", "#ffebd0","#d7f0f2","#90d7de","#52c2cc","#b56576","#6d597a","#355070")
fontsize = 14
dodge = .35
# grouped box plot
level_order <- c('remote user',	'local user')
ggplot(data=cleandata, mapping= aes(x=factor(params, level = level_order), y=mean_score, fill=mode)) +
geom_col(width=.5, position=position_dodge(.6)) +
geom_errorbar(aes(ymin=mean_score-se_score, ymax=mean_score+se_score), width=.2, position=position_dodge(.6))+
scale_fill_manual(values = pref_color) +
scale_y_continuous(expand = c(0, 0)) +
coord_flip(ylim = c(0, 100)) +
guides(fill=guide_legend(title="")) +
theme_bw() +
theme(axis.line = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(color="black", size=fontsize),
axis.text.y = element_text(color="black", size=fontsize),
text = element_text(size=fontsize),
strip.background = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0.005, .025, 0, 0), "null"),
panel.spacing = unit(c(0, 0, 0, 0), "null"),
panel.grid.major = element_blank(),
panel.border = element_blank(),
legend.position = c(.95, 0.3),
legend.justification = c("right", "top"),
legend.title=element_blank(),
legend.text=element_text(size=fontsize),
legend.box.just = "right",
legend.box.background = element_rect(fill = "white", color = "black", size = 1))
usability_data=read.csv('csv/usability.csv', sep=",")
pref_color = c("#90d7de", "#ffbd66","#ffebd0")
# library
library(ggplot2)
library(ggpubr)
library(dplyr)
library(likert)
coloring = c("#E76469", "#F8D85E","#EDA645","#D1B0B3","#8C99A6","#ADD299","#4FA490","#3B7F9F")
fontsize = 14
# create a data frame
social_data =read.csv('csv/social-presence.csv', sep=",")
dat <- read.table(text = "A   B   C   D   E   F    G
1 10 80 30 90 70 60  90
2 20 50 70 50 40 10  40
3 60 80 80 60  60 30 160
4 20 40 70 80 20 10  70", header = TRUE)
View(dat)
barplot(as.matrix(dat))
g <- barplot(as.matrix(dat))
g <- barplot(as.matrix(dat))  +
coord_flip()
g <- barplot(as.matrix(dat), horiz = TRUE)
# library
library(ggplot2)
library(ggpubr)
fontsize = 14
coloring = c("#E76469", "#F8D85E","#EDA645","#D1B0B3","#8C99A6","#ADD299","#4FA490","#3B7F9F")
# latency and scalibility
data=read.csv('csv/latency.csv', sep=",")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
# Add theme elements
p <- p + theme(axis.title.x=element_blank(),
axis.title.y = element_blank(),
plot.margin = unit(c(0, .5, .5, 0), "null"),
panel.border = element_blank(),
strip.text = element_text(face = "bold"),
legend.title=element_blank(),
legend.direction="horizontal",
legend.position = c(.5,-.05),
legend.justification = c("center", "top"))
data=read.csv('csv/preference.csv', sep=",")
p <- ggplot(data, aes(x = conditions, y = score, fill = rank)) +
geom_bar(stat = 'identity', position = 'stack') +
coord_flip() +
theme_bw()
setwd("~/Documents/xrc/mrmac/public/data/v2")
data=read.csv('csv/preference.csv', sep=",")
anno <- data.frame(x1 = c(1.75, 0.75), x2 = c(2.25, 1.25),
y1 = c(36, 36), y2 = c(37, 37),
xstar = c(2, 1), ystar = c(38, 38),
lab = c("***", "**"),
region = c("q1", "q2"))
p <- ggplot(data, aes(x = conditions, y = score, fill = rank)) +
geom_bar(stat = 'identity', position = 'stack') +
coord_flip() +
theme_bw()
library(ggplot2)
library(dplyr)
library(ggpubr)
library(reshape2)
coloring = c("#E76469", "#F8D85E","#EDA645","#D1B0B3","#8C99A6","#ADD299","#4FA490","#3B7F9F")
fontsize = 14
preferences <- data.frame(
Condition = c("H1", "H2", "H3", "H4"),
R1 = c(2, 4, 1, 3), # Change these values to match the actual rankings in the study
R2 = c(4, 3, 2, 1), # Change these values to match the actual rankings in the study
R3 = c(3, 2, 4, 1), # Change these values to match the actual rankings in the study
R4 = c(1, 2, 3, 4) # Change these values to match the actual rankings in the study
)
data=read.csv('csv/preference.csv', sep=",")
p <- ggplot(data, aes(x = conditions, y = score, fill = rank)) +
geom_bar(stat = 'identity', position = 'stack') +
coord_flip() +
theme_bw()
# Add labels to bars
p <- p + geom_text(aes(label = score), position = position_stack(vjust = 0.5), color = "black", size = 4)
# Add facet grid
p <- p + facet_grid(rows = vars(qus), switch = "y") +
# geom_signif(annotations = "*", y_position = 36.5, xmin="C1", xmax="C2") +
theme(strip.placement = "outside",
strip.background = element_rect(fill=coloring[3], color = NA))
# Apply the custom colors to the fill color of each factor level
p <- p + scale_fill_manual(values = coloring)
# Add theme elements
p <- p + theme(axis.title.x=element_blank(),
axis.title.y = element_blank(),
plot.margin = unit(c(0, .5, .5, 0), "null"),
panel.border = element_blank(),
strip.text = element_text(face = "bold"),
legend.title=element_blank(),
legend.direction="horizontal",
legend.position = c(.5,-.05),
legend.justification = c("center", "top"))
# Show the plot
p
# saving the final figure
ggsave("out/preference.pdf", width = 7, height = 4, dpi = 1000)
data=read.csv('csv/preference.csv', sep=",")
p <- ggplot(data, aes(x = conditions, y = score, fill = rank)) +
geom_bar(stat = 'identity', position = 'stack') +
coord_flip() +
theme_bw()
# Add labels to bars
p <- p + geom_text(aes(label = score), position = position_stack(vjust = 0.5), color = "black", size = 4)
# Add facet grid
p <- p + facet_grid(rows = vars(qus), switch = "y") +
# geom_signif(annotations = "*", y_position = 36.5, xmin="C1", xmax="C2") +
theme(strip.placement = "outside",
strip.background = element_rect(fill=coloring[3], color = NA))
# Apply the custom colors to the fill color of each factor level
p <- p + scale_fill_manual(values = coloring)
# Add theme elements
p <- p + theme(axis.title.x=element_blank(),
axis.title.y = element_blank(),
plot.margin = unit(c(0, 0, .5, 0), "null"),
panel.border = element_blank(),
strip.text = element_text(face = "bold"),
legend.title=element_blank(),
legend.direction="horizontal",
legend.position = c(.5,-.05),
legend.justification = c("center", "top"))
# Show the plot
p
# saving the final figure
ggsave("out/preference.pdf", width = 7, height = 4, dpi = 1000)
data=read.csv('csv/preference.csv', sep=",")
p <- ggplot(data, aes(x = conditions, y = score, fill = rank)) +
geom_bar(stat = 'identity', position = 'stack') +
coord_flip() +
theme_bw()
# Add labels to bars
p <- p + geom_text(aes(label = score), position = position_stack(vjust = 0.5), color = "black", size = 4)
# Add facet grid
p <- p + facet_grid(rows = vars(qus), switch = "y") +
# geom_signif(annotations = "*", y_position = 36.5, xmin="C1", xmax="C2") +
theme(strip.placement = "outside",
strip.background = element_rect(fill=coloring[3], color = NA))
# Apply the custom colors to the fill color of each factor level
p <- p + scale_fill_manual(values = coloring)
# Add theme elements
p <- p + theme(axis.title.x=element_blank(),
axis.title.y = element_blank(),
plot.margin = unit(c(0, .05, .5, 0), "null"),
panel.border = element_blank(),
strip.text = element_text(face = "bold"),
legend.title=element_blank(),
legend.direction="horizontal",
legend.position = c(.5,-.05),
legend.justification = c("center", "top"))
# Show the plot
p
# saving the final figure
ggsave("out/preference.pdf", width = 7, height = 4, dpi = 1000)
# library
library(ggplot2)
library(ggpubr)
library(dplyr)
library(likert)
library(agricolae)
coloring = c("#E76469", "#F8D85E","#EDA645","#D1B0B3","#8C99A6","#ADD299","#4FA490","#3B7F9F")
fontsize = 14
data=read.csv('csv/sus.csv', sep=",")
data <- as.data.frame(data)
data[5:8] <- lapply(data[5:8], factor, levels=1:5, labels=c("Strongly Disagree", "Disagree", "Neutral","Agree","Strongly Agree"))
likt <- likert(data[,c(5:8)], grouping = data$conditions)
plot(likt, colors = c("#E76469", "#F8D85E","#EDA645","#4FA490","#3B7F9F")) +
theme_bw() +
theme(axis.line = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(color="black", size=fontsize),
axis.text.y = element_text(color="black", size=fontsize),
strip.background = element_blank(),
text = element_text(size=fontsize),
panel.border = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0.005, .025, 1, 0), "null"),
legend.title=element_blank(),
legend.direction="horizontal",
legend.position = c(.5, -.1),
legend.justification = c("center", "top"))
ggsave("out/usability.pdf", width = 6.5, height = 4, dpi = 1000)
# library
library(ggplot2)
library(ggpubr)
library(dplyr)
library(likert)
library(agricolae)
coloring = c("#E76469", "#F8D85E","#EDA645","#D1B0B3","#8C99A6","#ADD299","#4FA490","#3B7F9F")
fontsize = 14
data=read.csv('csv/sus.csv', sep=",")
data <- as.data.frame(data)
data[5:8] <- lapply(data[5:8], factor, levels=1:5, labels=c("Strongly Disagree", "Disagree", "Neutral","Agree","Strongly Agree"))
likt <- likert(data[,c(5:8)], grouping = data$conditions)
plot(likt, colors = c("#E76469", "#F8D85E","#EDA645","#4FA490","#3B7F9F")) +
theme_bw() +
theme(axis.line = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(color="black", size=fontsize),
axis.text.y = element_text(color="black", size=fontsize),
strip.text = element_text(color="black", size = fontsize),
strip.background = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0.005, .025, 1, 0), "null"),
legend.title=element_blank(),
legend.direction="horizontal",
legend.position = c(.5, -.1),
legend.justification = c("center", "top"))
ggsave("out/usability.pdf", width = 6.5, height = 4, dpi = 1000)
